predicate fzn_value_precede_int(int: s,int: t,array [int] of var int: x);
predicate array_int_maximum(var int: m,array [int] of var int: x);
array [1..2] of int: X_INTRODUCED_27_ = [1,-1];
var 0..0: X_INTRODUCED_17_;
var 0..3: X_INTRODUCED_18_;
var 0..3: X_INTRODUCED_19_;
var 0..3: X_INTRODUCED_20_;
var 0..3: X_INTRODUCED_21_;
var 0..3: X_INTRODUCED_22_;
var 0..3: X_INTRODUCED_23_;
var 0..3: X_INTRODUCED_24_;
var 0..3: X_INTRODUCED_25_;
var 0..3: X_INTRODUCED_26_;
var 0..3: X_INTRODUCED_29_ ::var_is_introduced :: is_defined_var;
array [1..10] of var int: X_INTRODUCED_16_:: output_array([1..10]) = [0,X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_20_,X_INTRODUCED_21_,X_INTRODUCED_22_,X_INTRODUCED_23_,X_INTRODUCED_24_,X_INTRODUCED_25_,X_INTRODUCED_26_];
array [1..10] of var int: X_INTRODUCED_28_ ::var_is_introduced  = [0,X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_20_,X_INTRODUCED_21_,X_INTRODUCED_22_,X_INTRODUCED_23_,X_INTRODUCED_24_,X_INTRODUCED_25_,X_INTRODUCED_26_];
constraint int_lin_ne([-1],[X_INTRODUCED_18_],0);
constraint int_lin_ne([-1],[X_INTRODUCED_19_],0);
constraint int_lin_ne(X_INTRODUCED_27_,[X_INTRODUCED_18_,X_INTRODUCED_19_],0);
constraint int_lin_ne(X_INTRODUCED_27_,[X_INTRODUCED_18_,X_INTRODUCED_20_],0);
constraint int_lin_ne(X_INTRODUCED_27_,[X_INTRODUCED_19_,X_INTRODUCED_21_],0);
constraint int_lin_ne(X_INTRODUCED_27_,[X_INTRODUCED_20_,X_INTRODUCED_21_],0);
constraint int_lin_ne(X_INTRODUCED_27_,[X_INTRODUCED_21_,X_INTRODUCED_22_],0);
constraint int_lin_ne(X_INTRODUCED_27_,[X_INTRODUCED_22_,X_INTRODUCED_23_],0);
constraint int_lin_ne(X_INTRODUCED_27_,[X_INTRODUCED_24_,X_INTRODUCED_25_],0);
constraint int_lin_ne(X_INTRODUCED_27_,[X_INTRODUCED_26_,X_INTRODUCED_18_],0);
constraint fzn_value_precede_int(0,1,X_INTRODUCED_16_);
constraint fzn_value_precede_int(1,2,X_INTRODUCED_16_);
constraint fzn_value_precede_int(2,3,X_INTRODUCED_16_);
constraint fzn_value_precede_int(3,4,X_INTRODUCED_16_);
constraint fzn_value_precede_int(4,5,X_INTRODUCED_16_);
constraint fzn_value_precede_int(5,6,X_INTRODUCED_16_);
constraint fzn_value_precede_int(6,7,X_INTRODUCED_16_);
constraint fzn_value_precede_int(7,8,X_INTRODUCED_16_);
constraint fzn_value_precede_int(8,9,X_INTRODUCED_16_);
constraint array_int_maximum(X_INTRODUCED_29_,X_INTRODUCED_28_):: defines_var(X_INTRODUCED_29_);
solve :: int_search([0,X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_20_,X_INTRODUCED_21_,X_INTRODUCED_22_,X_INTRODUCED_23_,X_INTRODUCED_24_,X_INTRODUCED_25_,X_INTRODUCED_26_],smallest,indomain_min,complete) satisfy;
